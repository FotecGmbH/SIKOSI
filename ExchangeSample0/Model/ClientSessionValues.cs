// (C) 2020 FOTEC Forschungs- und Technologietransfer GmbH
// Das Forschungsunternehmen der Fachhochschule Wiener Neustadt
// 
// Kontakt biss@fotec.at / www.fotec.at
// 
// Erstversion vom 08.07.2020 15.09
// Entwickler      Gregor Faiman
// Projekt         SIKOSI
namespace SIKOSI.Exchange.Model
{
    using System;

    /// <summary>
    /// This class stores calculated values for a session with a given client in the servers memory.
    /// </summary>
    public class ClientSessionValues
    {
        /// <summary>
        /// Backing field of the <see cref="PublicClientValueA"/> Property.
        /// </summary>
        private byte[] publicClientValueA;

        /// <summary>
        /// Backing field of the <see cref="ClientUsername"/> Property.
        /// </summary>
        private string username;

        /// <summary>
        /// Backing field of the <see cref="PrivateServerValue"/> Property.
        /// </summary>
        private byte[] privateValueB;

        /// <summary>
        /// Backing field of the <see cref="PublicServerValue"/> Property.
        /// </summary>
        private byte[] publicValueB;

        /// <summary>
        /// Backing field of the <see cref="SessionKey"/> Property.
        /// </summary>
        private byte[] sessionKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="ClientSessionValues"/> class.
        /// </summary>
        /// <param name="username">The clients user name.</param>
        /// <exception cref="ArgumentNullException">
        /// Thrown if user name is null.
        /// </exception>
        public ClientSessionValues(string username)
        {
            this.PrivateServerValue = new byte[1];
            this.PublicClientValueA = new byte[1];
            this.ClientUsername = username;
            this.PublicServerValue = new byte[1];
        }

        /// <summary>
        /// Gets or sets the private value B that was generated by the server as part of the login process.
        /// </summary>
        /// <value>The private value B.</value>
        /// <exception cref="ArgumentNullException">
        /// Is thrown if value is null.
        /// </exception>
        public byte[] PrivateServerValue
        {
            get
            {
                return this.privateValueB;
            }

            set
            {
                if (value == null)
                    throw new ArgumentNullException(nameof(value), "Value must not be null.");

                this.privateValueB = value;
            }
        }

        /// <summary>
        /// Gets or sets the public value B that was generated by the server and is sent to the client.
        /// </summary>
        /// <value>The public value B.</value>
        /// <exception cref="ArgumentNullException">
        /// Is thrown if value is null.
        /// </exception>
        public byte[] PublicServerValue
        {
            get
            {
                return this.publicValueB;
            }

            set
            {
                if (value == null)
                    throw new ArgumentNullException(nameof(value), "Value must not be null");

                this.publicValueB = value;
            }
        }

        /// <summary>
        /// Gets or sets the value A generated by the client.
        /// </summary>
        /// <value>The value generated by the client.</value>
        /// <exception cref="ArgumentNullException">
        /// Is thrown if you attempt to set null.
        /// </exception>
        public byte[] PublicClientValueA
        {
            get
            {
                return this.publicClientValueA;
            }

            set
            {
                this.publicClientValueA = value ?? throw new ArgumentNullException(nameof(value), "Value must not be null");
            }
        }

        /// <summary>
        /// Gets or sets the client username.
        /// </summary>
        /// <value>The client username.</value>
        /// <exception cref="ArgumentNullException">
        /// Is thrown if you attempt to set null.
        /// </exception>
        public string ClientUsername
        {
            get
            {
                return this.username;
            }

            set
            {
                this.username = value ?? throw new ArgumentNullException(nameof(value), "Username must not be null.");
            }
        }

        /// <summary>
        /// Gets or sets the calculated session key.
        /// </summary>
        /// <value>The calculated session key.</value>
        /// <exception cref="ArgumentNullException">
        /// Thrown if value is null.
        /// </exception>
        public byte[] SessionKey
        {
            get
            {
                return this.sessionKey;
            }

            set
            {
                this.sessionKey = value ?? throw new ArgumentNullException();
            }
        }
    }
}
